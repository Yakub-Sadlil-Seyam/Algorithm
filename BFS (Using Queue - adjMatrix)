#include<bits/stdc++.h>
using namespace std;

    int color[100];
    int mat[100][100] = {};
    #define RED 1
    #define GREEN 2
    #define BLACK 3
    int parent[100];
    int dstnce[100];

    void bfs(int startingNode,int node)
    {
        for(int i = 0; i <= node ; ++i){
            color[i] = RED;
            dstnce[i] = INT_MIN;
            parent[i] = -1;
        }
        dstnce[startingNode] = 0;
        parent[startingNode] = -1;

        queue<int> q;
        q.push(startingNode);

        while(!q.empty())
        {
            int x = q.front();
            cout<<x<<" ";    // to print nodes as per as they are visited
            q.pop();
            color[x] = GREEN;             // GREEN means node x is under processing

            for(int i = 1; i <= node;++i)
            {
                if(mat[x][i] == 1){
                    if(color[i] == RED){                // red means it is not visited
                            if(dstnce[i] < 0) dstnce[i] = dstnce[x] + 1;
                            parent[i] = x;

                            q.push(i);

                           cout<<">"<<i<<" ";     // to see which nodes are under node 'x' to push t queue
                    }
                }
            }
            cout<<endl;
            color[x] = BLACK;           // node x is black means node x has visited all its nodes and
        }                               // completed it's task level wise

    }

    int main()
    {
        int node, edge;
        cin >> node >> edge;

        for(int i = 0; i < edge; i++)
        {
            int x, y;
            cin >> x >> y;
            mat[x][y] = 1;
            mat[y][x] = 1;
        }
        bfs(1,node);
        cout<<"\n"<<"Printing parent of node 9 "<<endl;
        cout<<parent[9]<<endl;
        cout<<"Printing distance from 1 to 6"<<endl;
        cout<<dstnce[6]<<endl;
        return 0;
    }
    
   /* sample input
    10 13
    1 2
    1 3
    1 4
    2 6
    3 7
    3 8
    4 7
    5 10
    6 10
    7 8
    7 9
    8 5
    9 10
    
    image for this graph>  http://www.shafaetsplanet.com/planetcoding/wp-content/uploads/2014/02/bfs4.png
    */
    
